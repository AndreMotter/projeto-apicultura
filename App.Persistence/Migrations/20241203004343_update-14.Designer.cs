// <auto-generated />
using System;
using App.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace App.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241203004343_update-14")]
    partial class update14
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("App.Domain.Entities.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cep")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Uf")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("App.Domain.Entities.CodigoAcesso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .HasColumnType("text");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CodigoAcesso");
                });

            modelBuilder.Entity("App.Domain.Entities.HistoricoAcessos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("Operacao")
                        .HasColumnType("integer");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistoricoAcessos");
                });

            modelBuilder.Entity("App.Domain.Entities.Nfc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Nfc");
                });

            modelBuilder.Entity("App.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("CidadeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("Permissao")
                        .HasColumnType("integer");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_apiario", b =>
                {
                    b.Property<Guid>("apa_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("abe_apicultorapi_codigo")
                        .HasColumnType("uuid");

                    b.Property<string>("apa_descricao")
                        .HasColumnType("text");

                    b.Property<string>("apa_endereco")
                        .HasColumnType("text");

                    b.Property<Guid>("api_codigoresponsavel")
                        .HasColumnType("uuid");

                    b.HasKey("apa_codigo");

                    b.HasIndex("abe_apicultorapi_codigo");

                    b.ToTable("abe_apiario");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_apicultor", b =>
                {
                    b.Property<Guid>("api_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("api_cpfcnpj")
                        .HasColumnType("text");

                    b.Property<string>("api_nome")
                        .HasColumnType("text");

                    b.Property<bool>("api_status")
                        .HasColumnType("boolean");

                    b.Property<string>("api_telefone")
                        .HasColumnType("text");

                    b.HasKey("api_codigo");

                    b.ToTable("abe_apicultor");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_apicultorcolmeia", b =>
                {
                    b.Property<Guid>("cpi_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("abe_apicultorapi_codigo")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("abe_colmeiacol_codigo")
                        .HasColumnType("uuid");

                    b.Property<Guid>("api_codigo")
                        .HasColumnType("uuid");

                    b.Property<Guid>("col_codigo")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("cpi_datainicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("cpi_principal")
                        .HasColumnType("boolean");

                    b.Property<bool>("cpi_status")
                        .HasColumnType("boolean");

                    b.HasKey("cpi_codigo");

                    b.HasIndex("abe_apicultorapi_codigo");

                    b.HasIndex("abe_colmeiacol_codigo");

                    b.ToTable("abe_apicultorcolmeia");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_colmeia", b =>
                {
                    b.Property<Guid>("col_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("abe_racarac_codigo")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("col_datainstalacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("col_descricao")
                        .HasColumnType("text");

                    b.Property<decimal>("col_latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("col_longitude")
                        .HasColumnType("numeric");

                    b.Property<int>("col_numero")
                        .HasColumnType("integer");

                    b.Property<string>("col_status")
                        .HasColumnType("text");

                    b.Property<Guid>("rac_codigo")
                        .HasColumnType("uuid");

                    b.HasKey("col_codigo");

                    b.HasIndex("abe_racarac_codigo");

                    b.ToTable("abe_colmeia");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_inspecao", b =>
                {
                    b.Property<Guid>("ins_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("abe_apicultorapi_codigo")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("abe_colmeiacol_codigo")
                        .HasColumnType("uuid");

                    b.Property<Guid>("api_codigo")
                        .HasColumnType("uuid");

                    b.Property<Guid>("col_codigo")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ins_data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ins_observacao")
                        .HasColumnType("text");

                    b.Property<int>("ins_situacao")
                        .HasColumnType("integer");

                    b.HasKey("ins_codigo");

                    b.HasIndex("abe_apicultorapi_codigo");

                    b.HasIndex("abe_colmeiacol_codigo");

                    b.ToTable("abe_inspecao");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_leitura", b =>
                {
                    b.Property<Guid>("lei_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("abe_colmeiacol_codigo")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("abe_tipodeituratip_codigo")
                        .HasColumnType("uuid");

                    b.Property<Guid>("col_codigo")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("lei_data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("lei_valor")
                        .HasColumnType("numeric");

                    b.Property<Guid>("tip_codigo")
                        .HasColumnType("uuid");

                    b.HasKey("lei_codigo");

                    b.HasIndex("abe_colmeiacol_codigo");

                    b.HasIndex("abe_tipodeituratip_codigo");

                    b.ToTable("abe_leitura");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_raca", b =>
                {
                    b.Property<Guid>("rac_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("rac_descricao")
                        .HasColumnType("text");

                    b.Property<string>("rac_origem")
                        .HasColumnType("text");

                    b.Property<bool>("rac_status")
                        .HasColumnType("boolean");

                    b.HasKey("rac_codigo");

                    b.ToTable("abe_raca");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_tipodeitura", b =>
                {
                    b.Property<Guid>("tip_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("abe_unidademedidauni_codigo")
                        .HasColumnType("uuid");

                    b.Property<string>("tip_descricao")
                        .HasColumnType("text");

                    b.Property<Guid>("uni_codigo")
                        .HasColumnType("uuid");

                    b.HasKey("tip_codigo");

                    b.HasIndex("abe_unidademedidauni_codigo");

                    b.ToTable("abe_tipodeitura");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_unidademedida", b =>
                {
                    b.Property<Guid>("uni_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("uni_descricao")
                        .HasColumnType("text");

                    b.HasKey("uni_codigo");

                    b.ToTable("abe_unidademedida");
                });

            modelBuilder.Entity("App.Domain.Entities.CodigoAcesso", b =>
                {
                    b.HasOne("App.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("App.Domain.Entities.HistoricoAcessos", b =>
                {
                    b.HasOne("App.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("App.Domain.Entities.Nfc", b =>
                {
                    b.HasOne("App.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("App.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("App.Domain.Entities.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId");

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_apiario", b =>
                {
                    b.HasOne("App.Domain.Entities.abe_apicultor", "abe_apicultor")
                        .WithMany()
                        .HasForeignKey("abe_apicultorapi_codigo");

                    b.Navigation("abe_apicultor");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_apicultorcolmeia", b =>
                {
                    b.HasOne("App.Domain.Entities.abe_apicultor", "abe_apicultor")
                        .WithMany()
                        .HasForeignKey("abe_apicultorapi_codigo");

                    b.HasOne("App.Domain.Entities.abe_colmeia", "abe_colmeia")
                        .WithMany()
                        .HasForeignKey("abe_colmeiacol_codigo");

                    b.Navigation("abe_apicultor");

                    b.Navigation("abe_colmeia");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_colmeia", b =>
                {
                    b.HasOne("App.Domain.Entities.abe_raca", "abe_raca")
                        .WithMany()
                        .HasForeignKey("abe_racarac_codigo");

                    b.Navigation("abe_raca");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_inspecao", b =>
                {
                    b.HasOne("App.Domain.Entities.abe_apicultor", "abe_apicultor")
                        .WithMany()
                        .HasForeignKey("abe_apicultorapi_codigo");

                    b.HasOne("App.Domain.Entities.abe_colmeia", "abe_colmeia")
                        .WithMany()
                        .HasForeignKey("abe_colmeiacol_codigo");

                    b.Navigation("abe_apicultor");

                    b.Navigation("abe_colmeia");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_leitura", b =>
                {
                    b.HasOne("App.Domain.Entities.abe_colmeia", "abe_colmeia")
                        .WithMany()
                        .HasForeignKey("abe_colmeiacol_codigo");

                    b.HasOne("App.Domain.Entities.abe_tipodeitura", "abe_tipodeitura")
                        .WithMany()
                        .HasForeignKey("abe_tipodeituratip_codigo");

                    b.Navigation("abe_colmeia");

                    b.Navigation("abe_tipodeitura");
                });

            modelBuilder.Entity("App.Domain.Entities.abe_tipodeitura", b =>
                {
                    b.HasOne("App.Domain.Entities.abe_unidademedida", "abe_unidademedida")
                        .WithMany()
                        .HasForeignKey("abe_unidademedidauni_codigo");

                    b.Navigation("abe_unidademedida");
                });
#pragma warning restore 612, 618
        }
    }
}
